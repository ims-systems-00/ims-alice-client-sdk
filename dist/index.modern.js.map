{"version":3,"file":"index.modern.js","sources":["../src/httpServices.js","../src/accountServices.js","../src/userServices.js","../src/ai/converstion.js","../src/chatService.js","../src/chatheadService.js","../src/fileHandlerService.js"],"sourcesContent":["import axios, { AxiosError } from \"axios\";\nconst HTTP_DEFAULT = axios.create({\n  withCredentials: true,\n});\nfunction setJwt(accessToken, refreshToken) {\n  HTTP_DEFAULT.defaults.headers.common[\"x-auth-accesstoken\"] = `${accessToken}`;\n  HTTP_DEFAULT.defaults.headers.common[\n    \"x-auth-refreshtoken\"\n  ] = `${refreshToken}`;\n}\nlet http = {\n  config: function (conf) {\n    HTTP_DEFAULT.defaults.baseURL =\n      conf?.baseURL ||\n      \"https://https://alice-server-prod.imssystems.tech\" + \"/api/v1\";\n  },\n  instance: HTTP_DEFAULT,\n  get: HTTP_DEFAULT.get,\n  post: HTTP_DEFAULT.post,\n  put: HTTP_DEFAULT.put,\n  patch: HTTP_DEFAULT.patch,\n  delete: HTTP_DEFAULT.delete,\n  setJwt,\n  HTTPError: AxiosError,\n};\nexport default http;\n","import http from \"./httpServices\";\nconst apiEndPoint = `/accounts`;\nexport async function login(data) {\n  return http.post(apiEndPoint + \"/auth/login\", {\n    email: data.email,\n    password: data.password,\n  });\n}\nexport async function registerAccount(data = { email, name, password }) {\n  await http.post(apiEndPoint + \"/registration\", {\n    name: data.name,\n    email: data.email,\n    password: data.password,\n  });\n  /** we are auto loging user in with same password for better UX */\n  return login(data);\n}\nexport async function verifyRegistration({ token }) {\n  return http.post(\n    apiEndPoint + \"/registration/verification\",\n    {},\n    {\n      headers: { \"x-register-token\": token },\n    }\n  );\n}\nexport async function resendVerification(data = { userId }) {\n  return http.post(apiEndPoint + \"/registration/verification/emails\", {\n    userId: data.userId,\n  });\n}\nexport async function recoverAccount(data = { email }) {\n  return http.post(apiEndPoint + \"/recovery\", {\n    email: data.email,\n  });\n}\nexport async function verifyRecovery(\n  data = {\n    password,\n    token,\n  }\n) {\n  return http.post(\n    apiEndPoint + \"/recovery/verification\",\n    {\n      password: data.password,\n    },\n    {\n      headers: { \"x-recovery-token\": data.token },\n    }\n  );\n}\nexport async function refreshToken(data) {\n  return http.get(apiEndPoint + \"/auth/refresh-token\");\n}\nexport async function logout() {\n  return http.delete(apiEndPoint + \"/auth/logout\");\n}\n","import http from \"./httpServices\";\nconst apiEndPoint = `/users`;\nexport function getUserInfo(id) {\n  return http.get(`${apiEndPoint}/${id}`);\n}\nexport function updateUserProfile(id, data) {\n  return http.put(`${apiEndPoint}/${id}`, {\n    name: data.name,\n    organisationName: data.organisationName,\n    jobTitle: data.jobTitle,\n  });\n}\nexport function updateUserProfileImage(id, data) {\n  return http.put(`${apiEndPoint}/${id}/profile-image`, {\n    ...data,\n  });\n}\nexport function updateUserActivityStatus(id, data) {\n  return http.put(`${apiEndPoint}/${id}/activity-status`, {\n    ...data,\n  });\n}\nexport function updateUserPassword(id, data) {\n  return http.post(`${apiEndPoint}/${id}/change-password`, {\n    oldPassword: data.oldPassword,\n    password: data.password,\n  });\n}\n","import http from \"../httpServices\";\nconst apiEndPoint = `/conversation`;\nconst DEFAULT_PROMT = {\n  role: \"system\",\n  content: `You are an AI assistant named Alice. Always generate all your response in a markdown (don't wrap in code blocks only wrap in codeblock if it's some code or diagram) format. \n  Always comprehend your answers when asked for any documentation or policies. Make sure you give \n  language name in codeblocks markdown and never miss it. If you are asked to make or build \n  or prepare or construct charts or diagrams use mermaid js syntex for the charts and diagrams \n  and always include it codeblock markdown. Also try to explain or comprehend your general \n  answers with details as much as possible. Use UK english in your reseponses.`,\n};\n/**\n * ALERT: We should not user fetch with any other cases unless it's a\n * special case like this where axios does'nt have support for stream response\n * in browsers. limited  by XMLHTTPRequest  standards.\n */\nexport async function streamResponse(\n  data,\n  options = {\n    onStream: function () {},\n    onStreamEnd: function () {},\n    onError: function () {},\n    onTokenRefreshNeed: async function () {},\n    headers: {},\n  }\n) {\n  console.log(\n    \"sending charecters:\",\n    data.conversation.reduce((accumulator, currentValue) => {\n      return currentValue.content + accumulator;\n    }, \"\").length\n  );\n  console.log(\n    \"sending charecters trim:\",\n    data.conversation.reduce((accumulator, currentValue) => {\n      return currentValue.content + accumulator.trim();\n    }, \"\").length\n  );\n\n  async function _successResponseHandler(response) {\n    const reader = response.body.getReader();\n    let fullText = \"\";\n    while (true) {\n      try {\n        const { value, done } = await reader.read();\n        if (done) break;\n        const decodedtext = new TextDecoder(\"utf-8\").decode(value);\n        fullText += decodedtext;\n        options?.onStream(decodedtext);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n    options?.onStreamEnd(fullText);\n  }\n  try {\n    const URL =\n      process.env.REACT_APP_API_URL +\n      process.env.REACT_APP_API_VERSION +\n      `${apiEndPoint}/gpt-stream`;\n    const config = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(options?.headers || {}),\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        systemInstructions: data.systemInstructions || [DEFAULT_PROMT],\n        conversation: data.conversation,\n        prompt: data.prompt,\n      }),\n    };\n    const response = await fetch(URL, config);\n    if (response.ok) {\n      _successResponseHandler(response);\n    } else {\n      if (response.status === 401) {\n        const data = await options?.onTokenRefreshNeed();\n        const tokenPair = data?.tokenPair;\n        try {\n          let newResponse = await fetch(URL, {\n            ...config,\n            headers: {\n              ...config.headers,\n              \"x-auth-accesstoken\": tokenPair?.accessToken,\n            },\n          });\n          if (newResponse.ok) {\n            _successResponseHandler(newResponse);\n          }\n        } catch (err) {\n          options?.onError(err);\n        }\n      }\n    }\n  } catch (err) {\n    options?.onError(err);\n  }\n}\n\nexport async function normalResponse(data) {\n  return http.post(`${apiEndPoint}/gpt-normal`, {\n    systemInstructions: data.systemInstructions || [DEFAULT_PROMT],\n    conversation: data.conversation,\n    prompt: data.prompt,\n  });\n}\n","import http from \"./httpServices\";\nconst apiEndPoint = `/chats`;\nexport function createChat(data) {\n  return http.post(`${apiEndPoint}/`, {\n    chathead: data.chathead,\n    prompt: data.prompt,\n    response: data.response,\n  });\n}\nexport function updateChat(dataId, data) {\n  return http.put(`${apiEndPoint}/${dataId}/`, {\n    name: data.name,\n    description: data.description,\n  });\n}\nexport function reactOnChat(dataId, data) {\n  return http.put(`${apiEndPoint}/${dataId}/reactions`, {\n    reaction: data.reaction,\n  });\n}\nexport function listChats(query) {\n  return http.get(`${apiEndPoint}/?${query || \"\"}`);\n}\nexport function getChat(dataId) {\n  return http.get(`${apiEndPoint}/${dataId}`);\n}\nexport function hardDeleteChat(dataId) {\n  return http.delete(`${apiEndPoint}/${dataId}/hard`);\n}\n","import http from \"./httpServices\";\nconst apiEndPoint = `/chatheads`;\nexport function createChatead(data) {\n  return http.post(`${apiEndPoint}/`, {\n    name: data.name,\n    description: data.description || \"\",\n  });\n}\nexport function updateChathead(dataId, data) {\n  return http.put(`${apiEndPoint}/${dataId}/`, {\n    name: data.name,\n    description: data.description,\n  });\n}\nexport function listChateads(query) {\n  return http.get(`${apiEndPoint}/?${query || \"\"}`);\n}\nexport function getChatead(dataId) {\n  return http.get(`${apiEndPoint}/${dataId}`);\n}\nexport function hardDeleteChatead(dataId) {\n  return http.delete(`${apiEndPoint}/${dataId}/hard`);\n}\n","import http from \"./httpServices\";\nimport moment from \"moment\";\nconst apiEndPoint = `/file-manager`;\nmoment().format();\nexport function downloader(fileName, data) {\n  const downloadUrl = window.URL.createObjectURL(new Blob([data]));\n  const link = document.createElement(\"a\");\n  link.href = downloadUrl;\n  link.setAttribute(\"download\", fileName);\n  document.body.appendChild(link);\n  link.click();\n  link.remove();\n}\n\nexport async function uploadFileToS3(file, config) {\n  try {\n    let { data } = await http.get(`${apiEndPoint}/upload-url`, {\n      headers: {\n        \"x-file-name\": file.name,\n      },\n    });\n    let uploadResponse = await http.put(data?.details?.uploadUrl, file, config);\n    uploadResponse.data = { ...data };\n    return uploadResponse;\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function downloadFile(attachment) {\n  try {\n    const fileName = attachment?.Name || attachment?.Key?.split(\"/\")[1];\n    const { data } = await http.get(`${apiEndPoint}/signed-url`, {\n      headers: {\n        \"x-file-name\": fileName,\n        \"x-file-key\": attachment?.Key || attachment?.key,\n        \"x-file-version\": null,\n        \"x-file-bucket\": attachment?.Bucket,\n      },\n    });\n    const link = document.createElement(\"a\");\n    link.href = data.url;\n    link.target = \"_blank\";\n    link.rel = \"noopener\";\n    link.setAttribute(\"download\", fileName);\n    document.body.appendChild(link);\n    link.click();\n    link.remove();\n  } catch (ex) {}\n}\n"],"names":["HTTP_DEFAULT","axios","create","withCredentials","http","config","conf","defaults","baseURL","instance","get","post","put","patch","delete","setJwt","accessToken","refreshToken","headers","common","HTTPError","AxiosError","logout","Promise","resolve","apiEndPoint","e","reject","data","verifyRecovery","undefined","password","token","recoverAccount","email","resendVerification","userId","verifyRegistration","_ref","registerAccount","name","then","login","getUserInfo","id","updateUserProfile","organisationName","jobTitle","updateUserProfileImage","_extends","updateUserActivityStatus","updateUserPassword","oldPassword","_catch","body","recover","result","_settle","pact","state","value","s","_Pact","o","bind","v","observer","prototype","onFulfilled","onRejected","this","callback","_this","_isSettledPact","thenable","normalResponse","systemInstructions","DEFAULT_PROMT","conversation","prompt","streamResponse","options","onStream","onStreamEnd","onError","onTokenRefreshNeed","_successResponseHandler","response","_interrupt","_temp7","_options","fullText","reader","getReader","_temp6","test","update","stage","shouldContinue","updateValue","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","_for","_temp5","read","_options2","done","decodedtext","TextDecoder","decode","err","console","log","reduce","accumulator","currentValue","content","length","trim","_temp4","_options3","URL","process","env","REACT_APP_API_URL","REACT_APP_API_VERSION","method","credentials","JSON","stringify","fetch","_temp3","ok","_temp2","_options4","status","tokenPair","_temp","newResponse","_options5","_options6","role","createChat","chathead","updateChat","dataId","description","reactOnChat","reaction","listChats","query","getChat","hardDeleteChat","createChatead","updateChathead","listChateads","getChatead","hardDeleteChatead","downloadFile","attachment","_attachment$Key","fileName","Name","Key","split","key","Bucket","_ref2","link","document","createElement","href","url","target","rel","setAttribute","appendChild","click","remove","uploadFileToS3","file","_data$details","details","uploadUrl","uploadResponse","downloader","downloadUrl","window","createObjectURL","Blob","moment","format"],"mappings":"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"}